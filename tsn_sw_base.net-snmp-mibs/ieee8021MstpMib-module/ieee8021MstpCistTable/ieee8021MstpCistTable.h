/*
 * TTTech ieee8021MstpMib-mib-module
 * Copyright(c) 2019 TTTech Computertechnik AG.
 *
 * ALL RIGHTS RESERVED.
 * Usage of this software, including source code, netlists, documentation,
 * is subject to restrictions and conditions of the applicable license
 * agreement with TTTech Computertechnik AG or its affiliates.
 *
 * All trademarks used are the property of their respective owners.
 *
 * TTTech Computertechnik AG and its affiliates do not assume any liability
 * arising out of the application or use of any product described or shown
 * herein. TTTech Computertechnik AG and its affiliates reserve the right to
 * make changes, at any time, in order to improve reliability, function or
 * design.
 *
 * Contact Information:
 * support@4me.tttech-dependablenetworks.com
 * TTTech Computertechnik AG, Schoenbrunnerstrasse 7, 1040 Vienna, Austria
 */
/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 */
#ifndef IEEE8021MSTPCISTTABLE_H
#define IEEE8021MSTPCISTTABLE_H

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
#include "base_defines.h"

typedef struct ieee8021MstpCistTable_entry ieee8021MstpCistTable_entry_t;

/* function declarations */
void init_ieee8021MstpCistTable(void);
void initialize_table_ieee8021MstpCistTable(void);
int init_ieee8021MstpCistTable_with_sys_data(netsnmp_tdata *table_data);
netsnmp_tdata_row *ieee8021MstpCistTable_createEntry(netsnmp_tdata *table_data, u_long  ieee8021MstpCistComponentId);
int ieee8021MstpCistTable_fillEntry(char bridge_name[MAX_STR_LEN], ieee8021MstpCistTable_entry_t *entry);
Netsnmp_Node_Handler ieee8021MstpCistTable_handler;
NetsnmpCacheLoad ieee8021MstpCistTable_load;
NetsnmpCacheFree ieee8021MstpCistTable_free;
#define IEEE8021MSTPCISTTABLE_TIMEOUT  60

/* column number definitions for table ieee8021MstpCistTable */
#define COLUMN_IEEE8021MSTPCISTCOMPONENTID		      1
#define COLUMN_IEEE8021MSTPCISTBRIDGEIDENTIFIER		  2
#define COLUMN_IEEE8021MSTPCISTTOPOLOGYCHANGE		  3
#define COLUMN_IEEE8021MSTPCISTREGIONALROOTIDENTIFIER 4
#define COLUMN_IEEE8021MSTPCISTPATHCOST		          5
#define COLUMN_IEEE8021MSTPCISTMAXHOPS		          6

/* Typical data structure for a row entry */
struct ieee8021MstpCistTable_entry {
    /* Index values */
    u_long ieee8021MstpCistComponentId;

    /* Column values */
    char ieee8021MstpCistBridgeIdentifier[MAX_STR_LEN];
    size_t ieee8021MstpCistBridgeIdentifier_len;
    long ieee8021MstpCistTopologyChange;
    char ieee8021MstpCistRegionalRootIdentifier[MAX_STR_LEN];
    size_t ieee8021MstpCistRegionalRootIdentifier_len;
    u_long ieee8021MstpCistPathCost;
    long ieee8021MstpCistMaxHops;
    long old_ieee8021MstpCistMaxHops;

    int   valid;
};
#endif /* IEEE8021MSTPCISTTABLE_H */
