/*
 * TTTech ieee8021MstpMib-mib-module
 * Copyright(c) 2019 TTTech Industrial Automation AG.
 *
 * ALL RIGHTS RESERVED.
 * Usage of this software, including source code, netlists, documentation,
 * is subject to restrictions and conditions of the applicable license
 * agreement with TTTech Industrial Automation AG or its affiliates.
 *
 * All trademarks used are the property of their respective owners.
 *
 * TTTech Industrial Automation AG and its affiliates do not assume any liability
 * arising out of the application or use of any product described or shown
 * herein. TTTech Industrial Automation AG and its affiliates reserve the right to
 * make changes, at any time, in order to improve reliability, function or
 * design.
 *
 * Contact Information:
 * support@tttech-industrial.com
 * TTTech Industrial Automation AG, Schoenbrunnerstrasse 7, 1040 Vienna, Austria
 */
/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 */
#ifndef IEEE8021MSTPCONFIGIDTABLE_H
#define IEEE8021MSTPCONFIGIDTABLE_H

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
#include "base_defines.h"

typedef struct ieee8021MstpConfigIdTable_entry ieee8021MstpConfigIdTable_entry_t;

/* function declarations */
void init_ieee8021MstpConfigIdTable(void);
void initialize_table_ieee8021MstpConfigIdTable(void);
int init_ieee8021MstpConfigIdTable_with_sys_data(netsnmp_tdata *table_data);
netsnmp_tdata_row* ieee8021MstpConfigIdTable_createEntry(
		netsnmp_tdata *table_data, u_long  ieee8021MstpConfigIdComponentId);
int ieee8021MstpConfigIdTable_fillEntry(
		char bridge_name[MAX_STR_LEN], ieee8021MstpConfigIdTable_entry_t *entry);
Netsnmp_Node_Handler ieee8021MstpConfigIdTable_handler;
NetsnmpCacheLoad ieee8021MstpConfigIdTable_load;
NetsnmpCacheFree ieee8021MstpConfigIdTable_free;
#define IEEE8021MSTPCONFIGIDTABLE_TIMEOUT  60

/* column number definitions for table ieee8021MstpConfigIdTable */
       #define COLUMN_IEEE8021MSTPCONFIGIDCOMPONENTID		1
       #define COLUMN_IEEE8021MSTPCONFIGIDFORMATSELECTOR		2
       #define COLUMN_IEEE8021MSTPCONFIGURATIONNAME		3
       #define COLUMN_IEEE8021MSTPREVISIONLEVEL		4
       #define COLUMN_IEEE8021MSTPCONFIGURATIONDIGEST		5

/* Typical data structure for a row entry */
struct ieee8021MstpConfigIdTable_entry {
	/* Index values */
	u_long ieee8021MstpConfigIdComponentId;

	/* Column values */
	long ieee8021MstpConfigIdFormatSelector;
	long old_ieee8021MstpConfigIdFormatSelector;
	char ieee8021MstpConfigurationName[MAX_STR_LEN];
	size_t ieee8021MstpConfigurationName_len;
	char old_ieee8021MstpConfigurationName[MAX_STR_LEN];
	size_t old_ieee8021MstpConfigurationName_len;
	u_long ieee8021MstpRevisionLevel;
	u_long old_ieee8021MstpRevisionLevel;
	char ieee8021MstpConfigurationDigest[MAX_STR_LEN];
	size_t ieee8021MstpConfigurationDigest_len;

	int   valid;
};

#endif /* IEEE8021MSTPCONFIGIDTABLE_H */
