/*
 * TTTech ieee8021MstpMib-mib-module
 * Copyright(c) 2019 TTTech Computertechnik AG.
 *
 * ALL RIGHTS RESERVED.
 * Usage of this software, including source code, netlists, documentation,
 * is subject to restrictions and conditions of the applicable license
 * agreement with TTTech Computertechnik AG or its affiliates.
 *
 * All trademarks used are the property of their respective owners.
 *
 * TTTech Computertechnik AG and its affiliates do not assume any liability
 * arising out of the application or use of any product described or shown
 * herein. TTTech Computertechnik AG and its affiliates reserve the right to
 * make changes, at any time, in order to improve reliability, function or
 * design.
 *
 * Contact Information:
 * support@4me.tttech-dependablenetworks.com
 * TTTech Computertechnik AG, Schoenbrunnerstrasse 7, 1040 Vienna, Austria
 */
/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 */
#ifndef IEEE8021MSTPPORTTABLE_H
#define IEEE8021MSTPPORTTABLE_H

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
// libbase includes
#include "base_defines.h"

typedef struct ieee8021MstpPortTable_entry ieee8021MstpPortTable_entry_t;

/* function declarations */
void init_ieee8021MstpPortTable(void);
void initialize_table_ieee8021MstpPortTable(void);
int init_ieee8021MstpPortTable_with_sys_data(netsnmp_tdata *table_data);
netsnmp_tdata_row* ieee8021MstpPortTable_createEntry( netsnmp_tdata *table_data
                                                    , u_long  ieee8021MstpPortComponentId
                                                    , u_long  ieee8021MstpPortMstId
                                                    , u_long  ieee8021MstpPortNum);
int ieee8021MstpPortTable_fillEntry(char port_name[MAX_STR_LEN],
		char bridge_name[MAX_STR_LEN], char mstp_id[BASE_FIVE], ieee8021MstpPortTable_entry_t* entry);
Netsnmp_Node_Handler ieee8021MstpPortTable_handler;
NetsnmpCacheLoad ieee8021MstpPortTable_load;
NetsnmpCacheFree ieee8021MstpPortTable_free;
#define IEEE8021MSTPPORTTABLE_TIMEOUT  60

/* column number definitions for table ieee8021MstpPortTable */
       #define COLUMN_IEEE8021MSTPPORTCOMPONENTID		1
       #define COLUMN_IEEE8021MSTPPORTMSTID		2
       #define COLUMN_IEEE8021MSTPPORTNUM		3
       #define COLUMN_IEEE8021MSTPPORTUPTIME		4
       #define COLUMN_IEEE8021MSTPPORTSTATE		5
       #define COLUMN_IEEE8021MSTPPORTPRIORITY		6
       #define COLUMN_IEEE8021MSTPPORTPATHCOST		7
       #define COLUMN_IEEE8021MSTPPORTDESIGNATEDROOT		8
       #define COLUMN_IEEE8021MSTPPORTDESIGNATEDCOST		9
       #define COLUMN_IEEE8021MSTPPORTDESIGNATEDBRIDGE		10
       #define COLUMN_IEEE8021MSTPPORTDESIGNATEDPORT		11
       #define COLUMN_IEEE8021MSTPPORTROLE		12
       #define COLUMN_IEEE8021MSTPPORTDISPUTED		13
       #define COLUMN_IEEE8021MSTPPORTADMINPATHCOST		14

/* Typical data structure for a row entry */
struct ieee8021MstpPortTable_entry {
	/* Index values */
	u_long ieee8021MstpPortComponentId;
	u_long ieee8021MstpPortMstId;
	u_long ieee8021MstpPortNum;

	/* Column values */
	u_long ieee8021MstpPortUptime;
	long ieee8021MstpPortState;
	long ieee8021MstpPortPriority;
	long old_ieee8021MstpPortPriority;
	long ieee8021MstpPortPathCost;
	long old_ieee8021MstpPortPathCost;
	char ieee8021MstpPortDesignatedRoot[MAX_STR_LEN];
	size_t ieee8021MstpPortDesignatedRoot_len;
	long ieee8021MstpPortDesignatedCost;
	char ieee8021MstpPortDesignatedBridge[MAX_STR_LEN];
	size_t ieee8021MstpPortDesignatedBridge_len;
	u_long ieee8021MstpPortDesignatedPort;
	long ieee8021MstpPortRole;
	long ieee8021MstpPortDisputed;
	long ieee8021MstpPortAdminPathCost;
	long old_ieee8021MstpPortAdminPathCost;

	int   valid;
};
#endif /* IEEE8021MSTPPORTTABLE_H */
