/*
 * TTTech ieee8021MstpMib-mib-module
 * Copyright(c) 2019 TTTech Industrial Automation AG.
 *
 * ALL RIGHTS RESERVED.
 * Usage of this software, including source code, netlists, documentation,
 * is subject to restrictions and conditions of the applicable license
 * agreement with TTTech Industrial Automation AG or its affiliates.
 *
 * All trademarks used are the property of their respective owners.
 *
 * TTTech Industrial Automation AG and its affiliates do not assume any liability
 * arising out of the application or use of any product described or shown
 * herein. TTTech Industrial Automation AG and its affiliates reserve the right to
 * make changes, at any time, in order to improve reliability, function or
 * design.
 *
 * Contact Information:
 * support@tttech-industrial.com
 * TTTech Industrial Automation AG, Schoenbrunnerstrasse 7, 1040 Vienna, Austria
 */
/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 */
#ifndef IEEE8021MSTPCISTPORTTABLE_H
#define IEEE8021MSTPCISTPORTTABLE_H

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
// libbase includes
#include "base_defines.h"

typedef struct ieee8021MstpCistPortTable_entry ieee8021MstpCistPortTable_entry_t;

/* function declarations */
void init_ieee8021MstpCistPortTable(void);
void initialize_table_ieee8021MstpCistPortTable(void);
int init_ieee8021MstpCistPortTable_with_sys_data(netsnmp_tdata *table_data);
netsnmp_tdata_row* ieee8021MstpCistPortTable_createEntry(netsnmp_tdata *table_data, u_long  ieee8021MstpCistPortComponentId
                 , u_long  ieee8021MstpCistPortNum);
int ieee8021MstpCistPortTable_fillEntry(char port_name[MAX_STR_LEN],
		char bridge_name[MAX_STR_LEN], ieee8021MstpCistPortTable_entry_t *entry);
Netsnmp_Node_Handler ieee8021MstpCistPortTable_handler;
NetsnmpCacheLoad ieee8021MstpCistPortTable_load;
NetsnmpCacheFree ieee8021MstpCistPortTable_free;

#define IEEE8021MSTPCISTPORTTABLE_TIMEOUT  60

/* column number definitions for table ieee8021MstpCistPortTable */
       #define COLUMN_IEEE8021MSTPCISTPORTCOMPONENTID		1
       #define COLUMN_IEEE8021MSTPCISTPORTNUM		2
       #define COLUMN_IEEE8021MSTPCISTPORTUPTIME		3
       #define COLUMN_IEEE8021MSTPCISTPORTADMINPATHCOST		4
       #define COLUMN_IEEE8021MSTPCISTPORTDESIGNATEDROOT		5
       #define COLUMN_IEEE8021MSTPCISTPORTTOPOLOGYCHANGEACK		6
       #define COLUMN_IEEE8021MSTPCISTPORTHELLOTIME		7
       #define COLUMN_IEEE8021MSTPCISTPORTADMINEDGEPORT		8
       #define COLUMN_IEEE8021MSTPCISTPORTOPEREDGEPORT		9
       #define COLUMN_IEEE8021MSTPCISTPORTMACENABLED		10
       #define COLUMN_IEEE8021MSTPCISTPORTMACOPERATIONAL		11
       #define COLUMN_IEEE8021MSTPCISTPORTRESTRICTEDROLE		12
       #define COLUMN_IEEE8021MSTPCISTPORTRESTRICTEDTCN		13
       #define COLUMN_IEEE8021MSTPCISTPORTROLE		14
       #define COLUMN_IEEE8021MSTPCISTPORTDISPUTED		15
       #define COLUMN_IEEE8021MSTPCISTPORTCISTREGIONALROOTID		16
       #define COLUMN_IEEE8021MSTPCISTPORTCISTPATHCOST		17
       #define COLUMN_IEEE8021MSTPCISTPORTPROTOCOLMIGRATION		18
       #define COLUMN_IEEE8021MSTPCISTPORTENABLEBPDURX		19
       #define COLUMN_IEEE8021MSTPCISTPORTENABLEBPDUTX		20
       #define COLUMN_IEEE8021MSTPCISTPORTPSEUDOROOTID		21
       #define COLUMN_IEEE8021MSTPCISTPORTISL2GP		22

/* Typical data structure for a row entry */
struct ieee8021MstpCistPortTable_entry {
	/* Index values */
	u_long ieee8021MstpCistPortComponentId;
	u_long ieee8021MstpCistPortNum;

	/* Column values */
	u_long ieee8021MstpCistPortUptime;
	long ieee8021MstpCistPortAdminPathCost;
	long old_ieee8021MstpCistPortAdminPathCost;
	char ieee8021MstpCistPortDesignatedRoot[MAX_STR_LEN];
	size_t ieee8021MstpCistPortDesignatedRoot_len;
	long ieee8021MstpCistPortTopologyChangeAck;
	long ieee8021MstpCistPortHelloTime;
	long ieee8021MstpCistPortAdminEdgePort;
	long old_ieee8021MstpCistPortAdminEdgePort;
	long ieee8021MstpCistPortOperEdgePort;
	long ieee8021MstpCistPortMacEnabled;
	long old_ieee8021MstpCistPortMacEnabled;
	long ieee8021MstpCistPortMacOperational;
	long ieee8021MstpCistPortRestrictedRole;
	long old_ieee8021MstpCistPortRestrictedRole;
	long ieee8021MstpCistPortRestrictedTcn;
	long old_ieee8021MstpCistPortRestrictedTcn;
	long ieee8021MstpCistPortRole;
	long ieee8021MstpCistPortDisputed;
	char ieee8021MstpCistPortCistRegionalRootId[MAX_STR_LEN];
	size_t ieee8021MstpCistPortCistRegionalRootId_len;
	u_long ieee8021MstpCistPortCistPathCost;
	long ieee8021MstpCistPortProtocolMigration;
	long old_ieee8021MstpCistPortProtocolMigration;
	long ieee8021MstpCistPortEnableBPDURx;
	long old_ieee8021MstpCistPortEnableBPDURx;
	long ieee8021MstpCistPortEnableBPDUTx;
	long old_ieee8021MstpCistPortEnableBPDUTx;
	char ieee8021MstpCistPortPseudoRootId[MAX_STR_LEN];
	size_t ieee8021MstpCistPortPseudoRootId_len;
	char old_ieee8021MstpCistPortPseudoRootId[MAX_STR_LEN];
	size_t old_ieee8021MstpCistPortPseudoRootId_len;
	long ieee8021MstpCistPortIsL2Gp;
	long old_ieee8021MstpCistPortIsL2Gp;

	int   valid;
};
#endif /* IEEE8021MSTPCISTPORTTABLE_H */
