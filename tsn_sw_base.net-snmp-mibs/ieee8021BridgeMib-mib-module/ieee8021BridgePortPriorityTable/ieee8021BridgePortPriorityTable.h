/*
 * TTTech ieee8021BridgeMib-mib-module
 * Copyright(c) 2019 TTTech Industrial Automation AG.
 *
 * ALL RIGHTS RESERVED.
 * Usage of this software, including source code, netlists, documentation,
 * is subject to restrictions and conditions of the applicable license
 * agreement with TTTech Industrial Automation AG or its affiliates.
 *
 * All trademarks used are the property of their respective owners.
 *
 * TTTech Industrial Automation AG and its affiliates do not assume any liability
 * arising out of the application or use of any product described or shown
 * herein. TTTech Industrial Automation AG and its affiliates reserve the right to
 * make changes, at any time, in order to improve reliability, function or
 * design.
 *
 * Contact Information:
 * support@tttech-industrial.com
 * TTTech Industrial Automation AG, Schoenbrunnerstrasse 7, 1040 Vienna, Austria
 */
/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 */
#ifndef IEEE8021BRIDGEPORTPRIORITYTABLE_H
#define IEEE8021BRIDGEPORTPRIORITYTABLE_H

#include "base_prints.h"

typedef struct ieee8021BridgePortPriorityTable_entry ieee8021BridgePortPriorityTable_entry_t;

/* function declarations */
void init_ieee8021BridgePortPriorityTable(void);
int init_ieee8021BridgePortPriorityTable_with_sys_data(netsnmp_tdata *table_data);
void initialize_table_ieee8021BridgePortPriorityTable(void);
netsnmp_tdata_row *
ieee8021BridgePortPriorityTable_createEntry(netsnmp_tdata *table_data
                 , u_long  ieee8021BridgeBasePortComponentId
                 , u_long  ieee8021BridgeBasePort
                ) ;
int ieee8021BridgePortPriorityTable_fillEntry(char port_name[MAX_STR_LEN],
		ieee8021BridgePortPriorityTable_entry_t *entry);
Netsnmp_Node_Handler ieee8021BridgePortPriorityTable_handler;
NetsnmpCacheLoad ieee8021BridgePortPriorityTable_load;
NetsnmpCacheFree ieee8021BridgePortPriorityTable_free;
#define IEEE8021BRIDGEPORTPRIORITYTABLE_TIMEOUT  60

/* column number definitions for table ieee8021BridgePortPriorityTable */
#define COLUMN_IEEE8021BRIDGEPORTDEFAULTUSERPRIORITY				1
#define COLUMN_IEEE8021BRIDGEPORTNUMTRAFFICCLASSES					2
#define COLUMN_IEEE8021BRIDGEPORTPRIORITYCODEPOINTSELECTION			3
#define COLUMN_IEEE8021BRIDGEPORTUSEDEI								4
#define COLUMN_IEEE8021BRIDGEPORTREQUIREDROPENCODING				5
#define COLUMN_IEEE8021BRIDGEPORTSERVICEACCESSPRIORITYSELECTION		6

/* Typical data structure for a row entry */
struct ieee8021BridgePortPriorityTable_entry {
	/* Index values */
	u_long ieee8021BridgeBasePortComponentId;
	u_long ieee8021BridgeBasePort;

	/* Column values */
	u_long ieee8021BridgePortDefaultUserPriority;
	u_long old_ieee8021BridgePortDefaultUserPriority;
	long ieee8021BridgePortNumTrafficClasses;
	long old_ieee8021BridgePortNumTrafficClasses;
	long ieee8021BridgePortPriorityCodePointSelection;
	long old_ieee8021BridgePortPriorityCodePointSelection;
	long ieee8021BridgePortUseDEI;
	long old_ieee8021BridgePortUseDEI;
	long ieee8021BridgePortRequireDropEncoding;
	long old_ieee8021BridgePortRequireDropEncoding;
	long ieee8021BridgePortServiceAccessPrioritySelection;
	long old_ieee8021BridgePortServiceAccessPrioritySelection;

	int   valid;
};

#endif /* IEEE8021BRIDGEPORTPRIORITYTABLE_H */
