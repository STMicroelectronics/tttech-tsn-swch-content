/*
 * TTTech ieee8021BridgeMib-mib-module
 * Copyright(c) 2019 TTTech Industrial Automation AG.
 *
 * ALL RIGHTS RESERVED.
 * Usage of this software, including source code, netlists, documentation,
 * is subject to restrictions and conditions of the applicable license
 * agreement with TTTech Industrial Automation AG or its affiliates.
 *
 * All trademarks used are the property of their respective owners.
 *
 * TTTech Industrial Automation AG and its affiliates do not assume any liability
 * arising out of the application or use of any product described or shown
 * herein. TTTech Industrial Automation AG and its affiliates reserve the right to
 * make changes, at any time, in order to improve reliability, function or
 * design.
 *
 * Contact Information:
 * support@tttech-industrial.com
 * TTTech Industrial Automation AG, Schoenbrunnerstrasse 7, 1040 Vienna, Austria
 */
/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 */
#ifndef IEEE8021BRIDGEBASETABLE_H
#define IEEE8021BRIDGEBASETABLE_H

#include "base_defines.h"

typedef struct ieee8021BridgeBaseTable_entry ieee8021BridgeBaseTable_entry_t;

/* function declarations */
void init_ieee8021BridgeBaseTable(void);
void initialize_table_ieee8021BridgeBaseTable(void);
int init_ieee8021BridgeBaseTable_with_sys_data(
        netsnmp_tdata *table_data);
netsnmp_tdata_row * ieee8021BridgeBaseTable_createEntry(netsnmp_tdata *table_data,
		u_long ieee8021BridgeBaseComponentId);
int ieee8021BridgeBaseTable_fillEntry(char bridge_name[MAX_STR_LEN], ieee8021BridgeBaseTable_entry_t *entry);
Netsnmp_Node_Handler ieee8021BridgeBaseTable_handler;
NetsnmpCacheLoad ieee8021BridgeBaseTable_load;
NetsnmpCacheFree ieee8021BridgeBaseTable_free;

#define IEEE8021BRIDGEBASETABLE_TIMEOUT  60

/* column number definitions for table ieee8021BridgeBaseTable */
#define COLUMN_IEEE8021BRIDGEBASECOMPONENTID        		1
#define COLUMN_IEEE8021BRIDGEBASEBRIDGEADDRESS        		2
#define COLUMN_IEEE8021BRIDGEBASENUMPORTS        			3
#define COLUMN_IEEE8021BRIDGEBASECOMPONENTTYPE        		4
#define COLUMN_IEEE8021BRIDGEBASEDEVICECAPABILITIES         5
#define COLUMN_IEEE8021BRIDGEBASETRAFFICCLASSESENABLED      6
#define COLUMN_IEEE8021BRIDGEBASEMMRPENABLEDSTATUS          7
#define COLUMN_IEEE8021BRIDGEBASEROWSTATUS        			8
       
    /* Typical data structure for a row entry */
struct ieee8021BridgeBaseTable_entry {
    /* Index values */
    u_long ieee8021BridgeBaseComponentId;

    /* Column values */
    char ieee8021BridgeBaseBridgeAddress[6];//number 6 is generated
    size_t ieee8021BridgeBaseBridgeAddress_len;
    char old_ieee8021BridgeBaseBridgeAddress[6];
    size_t old_ieee8021BridgeBaseBridgeAddress_len;
    long ieee8021BridgeBaseNumPorts;
    long ieee8021BridgeBaseComponentType;
    long old_ieee8021BridgeBaseComponentType;
    char ieee8021BridgeBaseDeviceCapabilities[MAX_STR_LEN];
    size_t ieee8021BridgeBaseDeviceCapabilities_len;
    char old_ieee8021BridgeBaseDeviceCapabilities[MAX_STR_LEN];
    size_t old_ieee8021BridgeBaseDeviceCapabilities_len;
    long ieee8021BridgeBaseTrafficClassesEnabled;
    long old_ieee8021BridgeBaseTrafficClassesEnabled;
    long ieee8021BridgeBaseMmrpEnabledStatus;
    long old_ieee8021BridgeBaseMmrpEnabledStatus;
    long ieee8021BridgeBaseRowStatus;

    int   valid;
};

#endif /* IEEE8021BRIDGEBASETABLE_H */
